Homework:

Exercise 1.1:
2. C-s A S C I I
3. Backspace Backspace Backspace Backspace Backspace I n s t
4. Backspace Backspace Backspace Backspace h t m l
5. Backspace Backspace Backspace Backspace h u
6. C-e
7. C-a
8. M-<
9. No I have been using the Emacs shortcuts.
10. There are many Emacs shortcuts for all the things we were tasked to do.

Exercise 1.2:
2. C-s < ! - - C-k
3. C-s delete C-a C-k
4. C-s w i k i C-s C-s C-a uparrow C-k downarrow C-k downarrow C-k
5. C-s < ! rightarrow rightarrow rightarrow rightarrow rightarrow backspace
backspace backspace backspace backspace backspace backspace

Exercise 1.3:
2. M-% A s s i g n m e n t SP 1 Enter A s s i g n m e n t SP 3 7 Enter SP SP C-g
3. M-% U T F - 8 Enter U S - A S C I I Enter C-g
4. M-< C-s < o l C-e Enter

Exercise 1.4:
1. c a t SP e x e r 2 . h t m l SP e x e r 2 .
   d i f f SP  > e x e r 4 . h t m l
   3/4. M-> C-r - < rightarrow C-k C-y M-< C-s < p >
   s h o downarrow C-y Enter uparrow uparrow C-k Backspace
   M-> C-r < ! - C-SP downarrow downarrow C-e C-w C-y M-<
   C-s < h 2 > s u downarrow downarrow C-y downarrow
   downarrow Backspace Backspace C-a C-d uparrow C-d
   M-> C-r < ! C-k C-y M-< C-s e m a c s SP < /
   downarrow downarrow C-y M-> C-s C-s C-s rightarrow C-SP
   downarrow C-e C-w C-y M-< C-s h u n t < downarrow
   downarrow C-y
5. M-> C-SP M-{(x15) C-w
6. C-_
7. M-% C-y Enter < ! - - C-y - - > Enter SP
8. C-s <ol C-s(x7) M-<  M-% < O l Enter SP(x7)

Exercise 1.5:
1. m k d i r SP j u n k
2. t o u c h SP h e l l o . c
3. h e l l o . c
4. h e l l o - o u t

hello-out buffer:
-*- mode: compilation; default-directory:
"/home/daygana100/Desktop/CS35L/assignment1/" -*-
Compilation started at Wed Sep 30 00:14:14

make -k hello.c
make: Nothing to be done for 'hello.c'.

Compilation finished at Wed Sep 30 00:14:14

After doing gcc hello.c -o hello, and running the shell command
./hello > hello.output, the contents are:
#include <stdio.h>
int
main (void)
{
  char n = '\n';
  char b = '\\';
  char q = '"';
  char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n =
  '%cn';%c  char b = '%c%c';%c  char q = '%c';%c  char const *p = %c%
  s%c;%c  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n,
  n);%c  return 0;%c}%c";
  printf (p, n, n, n, n, b, n, b, b, n, q, n, q, p, q, n, n, n, n);
  return 0;
}

Exercise 1.6:
2. ( r a n d o m )
3. (setq x (random))
   (setq z (random))
   (setq y (random))
   (* x y z)
4. After multiplying 3 very large random numbers, the result is a
very negative number.
(setq x (random))
1337510610622152614
(setq y (random))
2267800141674457611
(setq z (random))
1967996483860563154
(* x y z)
-2239097503692712988
6. The numbers are not truly random since they must be mathematically
seeded from some origin and the pattern of "random" numbers will appear
again and start over at some point.
